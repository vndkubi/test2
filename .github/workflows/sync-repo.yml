name: Sync from upstream (always create PR)

on:
  schedule:
    - cron: '0 * * * *'  # ‚è∞ Ch·∫°y m·ªói gi·ªù
  workflow_dispatch:      # üß™ Cho ph√©p ch·∫°y th·ªß c√¥ng

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout fork repo (repository2)
        uses: actions/checkout@v4
        with:
          ref: main  # ƒê·∫£m b·∫£o checkout t·ª´ nh√°nh main
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: git remote add upstream https://github.com/ctson97/test1.git

      - name: Fetch upstream and create sync branch
        run: |
          git fetch upstream || { echo "Failed to fetch upstream"; exit 1; }
          BRANCH=sync-upstream-$(date +%s)
          git checkout -b $BRANCH || { echo "Failed to create branch"; exit 1; }
          git merge upstream/main || { echo "Merge failed"; exit 1; }
          git push origin $BRANCH || { echo "Push failed"; exit 1; }
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV

      - name: Check branch existence
        run: |
          gh api repos/${{ github.repository }}/branches/${{ env.BRANCH_NAME }} || { echo "Branch not found on remote"; exit 1; }
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Wait for branch to be available
        run: sleep 10  # Ch·ªù 10 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o nh√°nh ƒë∆∞·ª£c GitHub nh·∫≠n di·ªán

      - name: Create Pull Request
        run: |
          gh pr create \
            --repo ${{ github.repository }} \
            --title "üîÑ Sync from ctson97/test1" \
            --body "T·ª± ƒë·ªông ƒë·ªìng b·ªô t·ª´ upstream repository [ctson97/test1](https://github.com/ctson97/test1)." \
            --head ${{ env.BRANCH_NAME }} \
            --base main
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}